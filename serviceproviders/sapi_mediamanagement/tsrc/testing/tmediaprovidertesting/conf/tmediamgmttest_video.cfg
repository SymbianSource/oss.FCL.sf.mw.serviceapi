
################################################################   Video    ####################################################
/*
NOTE:
1. NULL input means not passing any value for the placeholder
2. NullValue means a NULL is passed as value to the placeholder
3. "NULL" as input to a parameter means a Null string or a string of value "NULL" is passed as input
4. All the fields in input is mandatory, if no value is to be passed for any field, a value NULL can be passed. And if NULL is to be passed as value, then 
	value "NULLVALUE" needs to be passed.
5. The key-value pair in Expected output can be in any order and all are optional.


Requirements:
The following video files are expected to be present at the mentioned locations. All the cases below are written based on this assumption. 
The expected output is as per this list.

The Expected output is of the form where all fields of each map is written in between two keys StartMap and EndMap 
All the maps are written between two key words ExpectedStart and ExpectedEnd, as shown below


FileNameAndPath:							Expected o/p format for each file:
c:\data\Videos\video1.mp4			StartMap Type Media FileName video1 FileExtension .mp4 Drive c: FileSize 71559 FileDate 20081019:033638 FileNameAndPath c:\data\Videos\video1.mp4 MimeType VIDEO/MP4 EndMap
e:\data\Videos\video2.3gp			StartMap Type Media FileName video2 FileExtension .3gp Drive e: FileSize 71559 FileDate 20081019:033638 FileNameAndPath e:\data\Videos\video2.3gp MimeType VIDEO/3GPP EndMap
e:\data\Videos\video3.mp4			StartMap Type Media FileName video3 FileExtension .mp4 Drive e: FileSize 1141811 FileDate 20060604:070320 FileNameAndPath e:\data\Videos\video3.mp4 MimeType VIDEO/MP4 EndMap
c:\data\Others\video4.mp4			StartMap Type Media FileName video4 FileExtension .mp4 Drive c: FileSize 1141811 FileDate 20060711:044818 FileNameAndPath c:\data\Others\video4.mp4 MimeType VIDEO/MP4 EndMap
c:\data\Videos\video5.3gp			StartMap Type Media FileName video5 FileExtension .3gp Drive c: FileSize 71559 FileDate 20081019:033638 FileNameAndPath c:\data\Videos\video5.3gp MimeType VIDEO/3GPP EndMap


//Testcase format:
//Description of the testcase
//Input: Input values
//Expected:(+ve/-ve case) Expected output or behaviour 
[Test]
title Sample
create tmediaprovidertesting foobar
//foobar GetFilesListL <Type> <FileType> <Key> <StartRange> <EndRange> <SortKey> <SortOrder> <expected error code> ExpectedStart StartMap Type <Type value> FileName <filename value FileExtension <FileExtension value> Drive <Drive value> FileSize <FileSize value> FileDate <FileDate value> FileNameAndPath <FileNameAndPath value> MimeType <MimeType value> EndMap ExpectedEnd
foobar GetFilesListL FileInfo Video FileName video1 NULL NULL NULL 0 ExpectedStart StartMap Type Media FileName video1 FileExtension .mp4 Drive c: FileSize 71559 FileDate 20081019:033638 FileNameAndPath c:\data\Videos\video1.mp4 MimeType VIDEO/MP4 EndMap ExpectedEnd
delete foobar
[Endtest]

*/
############################################### Test cases starts ###############################################

#########################################Type==“FileInfo” + Passing Filter Map with FileType==video + Key+Start Range############################
//GetList of video files with NULL as value for startrange
//Input: FileName as Key and NULLVALUE as startrange
//Expected: 1002 errorcode- BadArgumentType
[Test]
title videoNeg_NullStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileName NULLVALUE NULL NULL NULL 1003 
delete foobar
[Endtest]

//GetList of video files with startrange for FileName
//Input: FileName as Key and video1 as startrange
//Expected: list of video files filtered by FileName. Thus details of all files named video1 is expected as o/p
[Test]
title video_WithValidFileNameStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileName video1 NULL NULL NULL 0 ExpectedStart StartMap FileName video1 EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList of video files  with startrange for FileExtension
//Input: FileExtension as Key and .3gp as startrange
//Expected: list of video files filtered by FileExtension. All files with extension .3gp is expected
[Test]
title video_WithValidFileExtensionStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileExtension .3gp NULL NULL NULL 0 ExpectedStart StartMap FileName video2 FileExtension .3gp EndMap StartMap FileName video5 FileExtension .3gp EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList of video files with startrange for Drive 
//Input: Drive as Key and e: as startrange
//Expected: list of video files filtered by Drive. Details of all files in e: drive is expected
[Test]
title video_DriveKey_e:StartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive e: NULL NULL NULL 0 ExpectedStart StartMap FileName video2 Drive e: EndMap StartMap FileName video3 Drive e: EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList of video files with startrange for FileSize
//Input: FileSize as Key and 71599 as startrange
//Expected: list of video files filtered by FileSize. Details of all files with size 71599 is expected o/p
[Test]
title video_WithValidFileSizeStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileSize 71559 NULL NULL NULL 0 ExpectedStart StartMap FileName video1 FileSize 71559 EndMap StartMap FileName video2 FileSize 71559 EndMap StartMap FileName video5 FileSize 71559 EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList of video files with startrange for FileDate
//Input: FileDate as Key and 20081019:033638 as startrange
///Expected: list of video files filtered by FileDate. all files with date 20081019:033638 is expected as o/p
[Test]
title video_WithValidFileDateStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileDate 20081019:033638 NULL NULL NULL 0 ExpectedStart StartMap FileName video1 FileDate 20081019:033638 EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList of video files with startrange for MimeType
//Input: MimeType as Key and video/3gpp as startrange
//Expected: list of video files filtered by MimeType. All files with MimeType as video/3gpp is expected 
[Test]
title video_WithValidMimeTypeStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video MimeType Video/3gpp NULL NULL NULL 0 ExpectedStart StartMap FileName video2 MimeType VIDEO/3GPP EndMap StartMap FileName video5 MimeType VIDEO/3GPP EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList of video files with startrange for FileNameAndPath
//Input: FileNameAndPath as Key and c:\data\videos\video1.mp4 as startrange
//Expected: list of video files filtered by FileNameAndPath. All files with path c:\data\videos\video1.mp4 are the expected o/p
[Test]
title video_WithValidFileNameAndPathStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileNameAndPath c:\data\videos\video1.mp4 NULL NULL NULL 0 ExpectedStart StartMap FileNameAndPath c:\data\Videos\video1.mp4 EndMap ExpectedEnd
delete foobar
[Endtest]


//GetList of video files with negative startrange for FileSize
//Input: FileSize as Key and a negative value -400 as startrange
//Expected: errorcode 1002-BadArgumentType
[Test]
title videoNeg_WithNegativeFileSizeStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileSize -400 NULL NULL NULL 1002
delete foobar
[Endtest]

//GetList of video files with negative startrange for FileDate
//Input: FileDate as Key and a negative value -12 as startrange
//Expected: errorcode 1002-BadArgumentType
[Test]
title videoNeg_WithNegativeFileDateStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileDate -12 NULL NULL NULL 1002
delete foobar
[Endtest]

//GetList of video files with startrange for FileSize such that no files with that value exists
//Input: FileSize as Key and a valid value 2000000 as startrange
//Expected: errorcode 0 and empty list is expected
[Test]
title video_WithValidFileSizeSartRange_NoExpectedO/p
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileSize 2000000 NULL NULL NULL 0
delete foobar
[Endtest]

//GetList of video files with startrange for FileDate such that no files with that value exists
//Input: FileDate as Key and a value 20090201:050000 as startrange
//Expected: errorcode 0 and empty list is expected
[Test]
title video_WithVsalidFileDate_NoExpectedO/p
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileDate 20090201:050000 NULL NULL NULL 0
delete foobar
[Endtest]


//GetList of video files with invalid value for startrange for FileDate 
//Input: FileDate as Key and a value 20094545:909834 as startrange
//Expected: errorcode 1002-BadArgumentType
[Test]
title videoNeg_InvalidFileDate
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileDate 20094545:909834 NULL NULL NULL 1002
delete foobar
[Endtest]

//GetList with startrange and no key
//Input: NULL as Key and 20000 and 30000 as start and end range values respectively
//Expected: list of all video files is expected
[Test]
title video_NullKey
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video NULL 20000 30000 NULL NULL 0
delete foobar
[Endtest]


//GetList with empty string as startrange
//Input: FileName as Key and empty string as startrange
//Expected: errorcode 0 is returned and empty list is returned
[Test]
title video_EmptyStringStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileName "" NULL NULL NULL 0 
delete foobar
[Endtest]

//GetList with integer as startrange
//Input: FileName as Key and integer value 12 as startrange
//Expected: errorcode 0 and empty list is returned
[Test]
title video_IntegerFileName
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileName 12 NULL NULL NULL 0
delete foobar
[Endtest]


//GetList of video files with a Null string as startrange for FileName
//Input: FileName as Key and a null string "NULL" as startrange
//Expected: errorcode 0 and empty list, as the file named NULL may not be present in the list
[Test]
title video_FileNameKey_NullStringStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileName "NULL" NULL NULL NULL 0 //1002
delete foobar
[Endtest]

//GetList of video files with a Null string as startrange for FileExtension
//Input: FileExtension as Key and a null string "NULL" as startrange
//Expected: errorcode 0 and empty list
[Test]
title video_FileExtensionKey_NullStringStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileExtension "NULL" NULL NULL NULL 0 //1002
delete foobar
[Endtest]

//GetList of video files with a Null string as startrange for Drive
//Input: Drive as Key and a null string "NULL" as startrange
//Expected: errorcode 0 and empty list
[Test]
title video_DriveKey_NullStringStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive "NULL" NULL NULL NULL 0 //1002
delete foobar
[Endtest]


//GetList of video files with a Null string as startrange for MimeType
//Input: MimeType as Key and a null string "NULL" as startrange
//Expected: errorcode 0 and empty list
[Test]
title video_MimeTypeKey__NullStringStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video MimeType "NULL" NULL NULL NULL 0 // 1002
delete foobar
[Endtest]

//GetList of video files with a Null string as startrange for FileNameAndPath
//Input: FileNameAndPath as Key and a null string "NULL" as startrange
//Expected: errorcode 0 and empty list
[Test]
title video_FileNameAndPathKey_NullStringStartRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileNameAndPath "NULL" NULL NULL NULL 0 //1002
delete foobar
[Endtest]

################################# Type==“FileInfo” + Passing Filter Map with FileType==video + Key+Start Range + End Range ######################

//GetList of video files with endrange less than startrange for FileSize
//Input: FileSize as Key, 70000 as startrange and 20000 (<startrange) as endrange value
//Expected: errorcode 1002-BadArgumentType
[Test]
title video_StartRangeGTEndRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileSize 70000 20000 NULL NULL 1002
delete foobar
[Endtest]

//GetList of video files with negative endrange for FileSize
//Input: FileSize as Key and 70000 as startrange and a negative value -12 as endrange
//Expected: errorcode 1002-BadArgumentType
[Test]
title videoNeg_NegativeFileSize
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileSize 70000 -12 NULL NULL 1002
delete foobar
[Endtest]

//GetList of video files with negative endrange for FileDate
//Input: FileDate as Key and 20090103:094451 as startrange and a negative value -24 as endrange
//Expected: errorcode 1002-BadArgumentType
[Test]
title videoNeg_NegativeFileDate
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileDate 20090103:094451 -24 NULL NULL 1002
delete foobar
[Endtest]

//GetList of video files with endrange where it is not applicable
//Input: FileName as Key and video2 as startrange and video4 as endrange
//Expected: the details of file named video2 is expected and the endrange is ignored
[Test]
title video_EndRangeForFileNameKey
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileName video2 video4 NULL NULL 0 ExpectedStart StartMap FileName video2 EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList with valid startrange for FileSize Key
//Input: FileSize as Key and 70000 and 80000 as start and end range values respectively
//Expected: list of all video files in the range of file size 70000 to 80000 is expected
[Test]
title video_ValidFileSizeRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileSize 70000 80000 NULL NULL 0 ExpectedStart StartMap FileName video1 FileSize 71559 EndMap StartMap FileName video2 FileSize 71559 EndMap StartMap FileName video5 FileSize 71559 EndMap ExpectedEnd
delete foobar
[Endtest]


//GetList with valid startrange for FileDate Key
//Input: FileDate as Key and 20060000:030000 and 20061111:090000 as start and end range values respectively
//Expected: list of all video files in the filedate range mentioned are expected
[Test]
title video_ValidFileDateRange
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileDate 20060000:030000 20061111:090000 NULL NULL 0 ExpectedStart StartMap FileName video3 FileDate 20060604:070320 EndMap StartMap FileName video4 FileDate 20060711:044818 EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList with valid startrange for FileSize Key, but no files being present in that range
//Input: FileSize as Key and 40000 and 50000 as start and end range values respectively
//Expected: errorcode 0 and empty output list is expected
[Test]
title video_ValidFileSizeRange_NoExpectedO/p
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileSize 40000 50000 NULL NULL 0 
delete foobar
[Endtest]



########################  Type==“FileInfo” + Passing Filter Map with FileType==video + Sort Map ########################


//GetList with Ascending order for a given drive
//Input: FileExtension as Key, .3gp as startrange, Drive as SortKey and Ascending as SortOrder.
//Expected: list of video files with extension .3gp are sorted in ascending order of their drive.
[Test]
title video_SortAscendingOnDrive
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileExtension .3gp NULL Drive Ascending 0 ExpectedStart StartMap FileName video5 Drive c: EndMap StartMap FileName video2 Drive e: EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList with Descending order for a given drive
//Input: FileExtension as Key, .3gp as startrange, Drive as SortKey and Descending as SortOrder.
//Expected: list of video files with extension .3gp are sorted in descending order of their drive.
[Test]
title video_SortDescendingOnDrive
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileExtension .3gp NULL Drive Descending 0 ExpectedStart StartMap FileName video2 Drive e: EndMap StartMap FileName video5 Drive c: EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList with Ascending order for a given FileExtension
//Input: Drive as Key, e: as startrange, FileExtension as SortKey and Ascending as SortOrder.
//Expected: list of video files in e: drive are sorted in ascending order by their file extension
[Test]
title video_SortAscendingOnFileExtension
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive e: NULL FileExtension Ascending 0 ExpectedStart StartMap FileName video2 FileExtension .3gp Drive e: EndMap StartMap FileName video3 FileExtension .mp4 Drive e: EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList with Descending order for a given FileExtension
//Input: Drive as Key, e: as startrange, FileExtension as SortKey and Descending as SortOrder.
//Expected: list of video files in e: drive are sorted in descending order by their file extension
[Test]
title video_SortDescendingOnFileExtension
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive e: NULL FileExtension Descending 0 ExpectedStart StartMap FileName video3 FileExtension .mp4 EndMap StartMap FileName video2 FileExtension .3gp EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList with Ascending order for a given MimeType
//Input: Drive as Key, e: as startrange, MimeType as SortKey and Ascending as SortOrder.
//Expected: list of video files in e: drive are sorted in ascending order by their MimeType
[Test]
title video_SortAscendingOnMimeType
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive e: NULL MimeType Ascending 0 ExpectedStart StartMap FileName video2 MimeType VIDEO/3GPP EndMap StartMap FileName video3 MimeType VIDEO/MP4 EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList with Descending order for a given MimeType
//Input: Drive as Key, e: as startrange, MimeType as SortKey and Descending as SortOrder.
//Expected: list of video files in e: drive are sorted in descending order by their MimeType
[Test]
title video_SortDescendingOnMimeType
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive e: NULL MimeType Descending 0 ExpectedStart StartMap FileName video3 MimeType VIDEO/MP4 EndMap StartMap FileName video2 MimeType VIDEO/3GPP EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList with Ascending order for a given FileSize
//Input: Drive as Key, e: as startrange, FileSize as SortKey and Ascending as SortOrder.
//Expected: list of video files in e: drive sorted in ascending order of their FileSize
[Test]
title video_SortAscendingOnFileSize
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive e: NULL FileSize Ascending 0 ExpectedStart StartMap FileName video2 FileSize 71559 EndMap StartMap FileName video3 FileSize 1141811 EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList with Descending order for a given FileSize
//Input: Drive as Key, e: as startrange, FileSize as SortKey and Descending as SortOrder.
//Expected: list of video files in e: drive, sorted in descending order of their FileSize
[Test]
title video_SortDescendingOnFileSize
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive e: NULL FileSize Descending 0 ExpectedStart StartMap FileName video3 FileSize 1141811 EndMap StartMap FileName video2 FileSize 71559 EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList with Ascending order for a given FileDate
//Input: Drive as Key, e: as startrange, FileDate as SortKey and Ascending as SortOrder.
//Expected: list of video files sorted in ascending order by FileDate
[Test]
title video_SortAscendingOnFileDate
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive e: NULL FileDate Ascending 0 ExpectedStart StartMap FileName video3 FileDate 20060604:070320 EndMap StartMap FileName video2 FileDate 20081019:033638 EndMap ExpectedEnd
delete foobar
[Endtest]

//GetList with Descending order for a given FileDate
//Input: FileSize as Key, 1100000 as startrange, 1200000 as endrange, FileDate as SortKey and Descending as SortOrder.
//Expected: list of video files with size between the range (1100000,1200000), sorted in descending order of their FileDate
[Test]
title video_SortDescendingOnFileDate
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileSize 1100000 1200000 FileDate Descending 0 ExpectedStart StartMap FileName video4 FileDate 20060711:044818 EndMap StartMap FileName video3 FileDate 20060604:070320 EndMap ExpectedEnd
delete foobar
[Endtest]


//GetList with no sort order 
//Input: Drive as Key, e: as value for startrange, FileName as SortKey, no sortorder(NULL as sortorder)
//Expected: list of video files,in e: drive, in ascending order(default order) of FileName
[Test]
title video_NoSortOrder
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive e: NULL FileName NULL 0 ExpectedStart StartMap FileName video2 EndMap StartMap FileName video3 EndMap ExpectedEnd
delete foobar
[Endtest]


//GetList Nokia as SortOrder
//Input: FileDate as SortKey and Nokia as SortOrder
//Expected: errorcode 1002-BadArgumentType, as Nokia is invalid SortOrder
[Test]
title video_NokiaSortOrder
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video NULL NULL NULL FileDate Nokia 1002
delete foobar
[Endtest]


//GetList ascending(case sensitive) as sort order
//Input: FileSize as Key, 1100000 as startrange, 1200000 as endrange, FileDate as SortKey and ascending(lowercase) as SortOrder.
//Expected: list of video files with size between the range (1100000,1200000), sorted in descending order of their FileDate
[Test]
title video_SortascendingOnFileName
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video FileSize 1100000 1200000 FileName ascending 0 ExpectedStart StartMap FileName video3 EndMap StartMap FileName video4 EndMap ExpectedEnd
delete foobar
[Endtest]


//GetList Ascending sort order for FileNameAndPath
//Input: FileNameAndPath as SortKey and Ascending as SortOrder
//Expected: list of video files sorted in ascending order of their FileNameAndPath
[Test]
title video_SortAscendingOnFileNameAndPath
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive c: NULL FileNameAndPath Ascending 0 ExpectedStart StartMap FileNameAndPath c:\data\Others\video4.mp4 EndMap StartMap FileNameAndPath c:\data\Videos\video1.mp4 EndMap StartMap FileNameAndPath c:\data\Videos\video5.3gp EndMap ExpectedEnd
delete foobar
[Endtest]


//GetList Descending order for FileName
//Input: FileName as SortKey and Descending as SortOrder
//Expected: list of video files sorted in descending order of their FileName
[Test]
title video_SortDescendingOnFileName
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive c: NULL FileName Descending 0 ExpectedStart StartMap FileName video5 EndMap StartMap FileName video4 EndMap StartMap FileName video1 EndMap ExpectedEnd
delete foobar
[Endtest]



//GetList case to check for all fields
//Input: Drive as FilterKey e: as startrange, all other values are not passed
//Expected: list of all video files in e: drive, sorted in ascending order of their FileName is expected
[Test]
title video_DriveKey_e:StartRange_CheckAllKeys
create tmediaprovidertesting foobar
foobar GetFilesListL FileInfo Video Drive e: NULL NULL NULL 0 ExpectedStart StartMap Type Media FileName video2 FileExtension .3gp Drive e: FileSize 71559 FileDate 20081019:033638 FileNameAndPath e:\data\Videos\video2.3gp MimeType VIDEO/3GPP EndMap StartMap Type Media FileName video3 FileExtension .mp4 Drive e: FileSize 1141811 FileDate 20060604:070320 FileNameAndPath e:\data\Videos\video3.mp4 MimeType VIDEO/MP4 EndMap ExpectedEnd
delete foobar
[Endtest]

############################################################################################################################################################################