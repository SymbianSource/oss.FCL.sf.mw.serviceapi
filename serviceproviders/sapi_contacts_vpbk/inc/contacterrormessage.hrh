/*
* Copyright (c) 2006-2007 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of the License "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Provides the Enumerations for contact interface Parameters
*
*/


#ifndef C_CONTACERRORMESSAGE_HRH
#define C_CONTACERRORMESSAGE_HRH

//GetList
_LIT(KGetListContentTypeMissing, "Contacts : GetList : Type is Missing");
_LIT(KGetListInvalidContentType, "Contacts: GetList : Invalid value for Type, Must be Contact/Group/Database");
_LIT(KGetIdsInvalidContentType, "Contacts: GetIds : Invalid value for Type, Must be Contact/Group");
_LIT(KGetListInvalidSortType, "Contacts : GetList : Invalid Sort Type, Map is required");
_LIT(KGetListSortOrderValue,"Contacts : GetList : Sort Order Value is not a String");
_LIT(KGetIdsBadArgCntId, "Contacts: GetIds : Invalid Contact Id input");
_LIT(KGetIdsBadArgGrpId, "Contacts: GetIds : Invalid Group Id input");

//new GetList 
_LIT(KGetListInvalidFilterType,"Contacts : GetList : Invalid Type of Filter, Map is required");
/////////////_LIT(KGetListInvalidContactID,"Contacts : GetList : Invalid Contact Id or Invalid Contact Id type ");
_LIT(KGetListInvalidSortordVal,"Contacts : GetList : Wrong Type of Sort Order value");
_LIT(KGetListInvalidSearchVal,"Contacts : GetList : Wrong Type of Search value");
_LIT(KGetListFiledListMissing,"Contacts : GetList : Field list is missing");
_LIT(KGetListFiledtypeWrong,"Contacts : GetList : Wrong Type of Field");

_LIT(KGetListWrongContentType, "Contacts : GetList : Wrong Type of ContentType");

//Add
_LIT(KAddContentTypeMissing, "Contacts : Add : Type is Missing");
_LIT(KAddDataMissing, "Contacts : Add : Add Data is Missing");
_LIT(KAddInvalidContentType, "Contacts : Add : Invalid Type, must be Contact/Group");

_LIT(KAddLabelMissing, "Contacts : Add : Group Label is Missing");

//new Add
_LIT(KAddLessArguments,"Contacts : Add : Mandatory Argument is not present");
_LIT(KAddWrongContactId,"Contacts : Add : Type of Contact Id is wrong");
_LIT(KAddInvalidDataType,"Contacts : Add : Invalid Type of Data , Map is required");
_LIT(KAddInvalidFieldType,"Contacts : Add : Invalid Type of Field value , Map is required");
_LIT(KAddNextFieldType,"Contacts : Add : Invalid Type of NextField value , Map is required");
_LIT(KAddInvalidStr,",Invalid Type,String is Required");
_LIT(KAddInvalidTime,",Invalid Type,TTime is Required");
_LIT(KAddCnt,"Contacts : Add :");
_LIT(KAddInvalGrpId,"Contacts : Add : Invalid Type of GroupId");
_LIT(KAddInvalGrpLabel,"Contacts : Add : Invalid Type of GroupLabel");
_LIT(KAddWrongContentType,"Contacts : Add : Wrong Type of ContentType");
_LIT(KAddKeyNotSpecified, "Contacts : Add : Atleast one field is required");
_LIT(KAddGroupLabelEmpty,"Contacts : Add : Group Label is Empty");
_LIT(KAddInvalidFieldKey,"Contacts : Add : Invalid Field Key : ");
_LIT(KAddFieldKeyNotSupported,"Contacts : Add :Field Key Not Supported on this Database: ");
_LIT(KAddXspidInvalidFormat,"Contacts : Add :Invalid format of value for IMPP field");
//cannot be determined
///////////////_LIT(KAddWrongFieldKey,"Contacts : Add : Invalid Field Key");

//Import
_LIT(KImportContentTypeMissing, "Contacts : Import : Type is Missing");
_LIT(KImportDataMissing, "Contacts : Import : Import data Missing");
_LIT(KImportDataMapMissing, "Contacts : Import : Invalid Type of Data , Map is required");
_LIT(KImportInvalidContentType, "Contacts : Import : Invalid Type,it must be Contact");
_LIT(KImportSrcFileNameMissing, "Contacts : Import : Import Source Filename is Missing");
_LIT(KImportSrcFileNotString, "Contact : Import : Import Source File is not a String" );
_LIT(KImportDbUriNotString, "Contact : Import : Import DataBaseUri is not a String" );
_LIT(KImportLessArguments,"Contacts : Import : Mandatory Argument is not present");
_LIT(KImportWrongContentType,"Contacts : Import : Wrong Type of ContentType");
_LIT(KImportFileNameTooLong,"Contacts : Import : Filename too long");


//Export
_LIT(KExportContentTypeMissing, "Contacts : Export : Type is Missing");
_LIT(KExportInvalidContentType, "Contacts : Export : Invalid Type, it must be Contact");
_LIT(KExportDataMissing, "Contacts : Export : Export Data Missing");
_LIT(KExportDataMapMissing, "Contacts : Export : Invalid Type of Data , Map is required");
_LIT(KExportDbUriNotString, "Contact : Export : Export DataBaseUri is not a String" );
_LIT(KExportDstFileNameMissing, "Contacts : Export : Export Destination Filename is Missing");
_LIT(KExportContactIdMissing, "Contacts : Export : Contact Id to be exported is missing" );
_LIT(KExportWrongContentType, "Contacts : Export : Wrong Type of ContentType");

_LIT(KExportLessArguments,"Contacts : Export : Mandatory Argument is not present");
_LIT(KExportDestnFlNmWrongType, "Contacts : Export : Destination Filename is  of wrong Type");
_LIT(KExportContactIdWrongType,"Contacts : Export : ContactId is  of wrong Type");
_LIT(KExportFileNameTooLong,"Contacts : Export : Filename too long");

//Delete
_LIT(KDeleteContentTypeMissing, "Contacts : Delete : Type is Missing");
_LIT(KDeleteInvalidContentType, "Contacts : Delete : Invalid Type, must be Contact/Group");
_LIT(KDeleteDataMissing, "Contacts : Delete : Delete data Missing");

_LIT(KDeleteDataMapMissing, "Contacts : Delete : Invalid Type of Data , Map is required");
_LIT(KDeleteDataListMissing, "Contacts : Delete : List of Ids is missing");

_LIT(KDeleteLessArguments,"Contacts : Delete : Mandatory Argument is not present");
_LIT(KDeleteInvalidTypeIdList,"Contacts : Delete : Type of IdList is wrong, List is required");
_LIT(KDeleteInvalidIdType,"Contacts : Delete : Invalid Type of Id");
_LIT(KDeleteWrongContentType,"Contacts : Delete : Wrong Type of ContentType");

//Organise
_LIT(KOrganiseContentTypeMissing, "Contacts : Organise : Type is Missing");
_LIT(KOrganiseDataMissing, "Contacts : Organise : Organise Data is Missing");
_LIT(KOrganiseInvalidContentType, "Contacts : Organise : Invalid Content Type, It must be Group");
_LIT(KOrganiseDataMapMissing, "Contacts : Organise : Invalid Type of Data , Map is required");
_LIT(KOrganiseDataInvalidOpType, "Contacts : Organise : Invalid Operation Type");

_LIT(KOrganiseDataListMissing, "Contacts : Organise : List of Ids is missing");
_LIT(KOrganiseGrpIdMissing,"Contacts : Organise : GroupId is missing");

_LIT(KOrganiseLessArguments,"Contacts : Organise : Mandatory Argument is not present");
_LIT(KOrganiseOperationTypeMissing,"Contacts : Organise : OperationType is Missing");
_LIT(KOrganiseOperationTypeWrong,"Contacts : Organise : Operation Type is Wrong");
_LIT(KOrganiseWrongGrpIdType,"Contacts : Organise : GroupId type is wrong");
_LIT(KOrganiseWrongIdListType,"Contacts : Organise : IdList  type is wrong");
_LIT(KOrganiseWrongIdType,"Contacts : Organise : Id type is wrong");
_LIT(KOrganiseEmptyIdList,"Contacts : Organise : Id  List is empty");

_LIT(KOrganiseWrongContentType,"Contacts : Organise : Wrong Type of ContentType");

_LIT(KCancleCommandoptionWrong ,"Contacts : Cancel : Command option is wrong");
_LIT(KCancelUnsuccessful, "Contacts : Cancel : Cancel Unsuccessful");
_LIT(KCancelTransIdMissing,"Contacts : Cancel : Transaction ID is Missing");

_LIT(KCommandNotSupported, "Contacts : Requested command not supported");
_LIT(KCallbackNotFound, "Contacts : Callback not found");
_LIT(KInterfaceNotSupported,"Contacts : Requested interface not supported by the provider");
_LIT(KInterfaceNameMissing,"Contacts : Interface name missing");



#endif // C_CONTACERRORMESSAGE_HRH